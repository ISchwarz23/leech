name: Cross-Compile App

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - aarch64-linux-android

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install cross compile tools
        run: sudo apt-get install -qq crossbuild-essential-arm64 crossbuild-essential-armhf

      - name: Install Android NDK
        if: matrix.target == 'aarch64-linux-android'
        run: |
          curl -sSL https://dl.google.com/android/repository/android-ndk-r27d-linux.zip -o ndk.zip
          unzip -q ndk.zip -d $HOME
          mv android-ndk-r27d android-ndk
          echo "ANDROID_NDK_HOME=$HOME/android-ndk" >> $GITHUB_ENV
          echo "$HOME/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

      - name: Set environment for Android build
        if: matrix.target == 'aarch64-linux-android'
        run: |
          echo "CC_aarch64_linux_android=$HOME/android-ndk-r27c/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
          echo "AR_aarch64_linux_android=$HOME/android-ndk-r27c/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-ar" >> $GITHUB_ENV

      - name: Generate cross-compile config
        run: |
          cat >>~/.cargo/config <<EOF
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          [target.aarch64-linux-android]
          ar = "$HOME/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-ar"
          linker = "$HOME/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang"
          EOF

      - name: Install rust target
        run: rustup target add ${{ matrix.target }}

      - name: Run build
        run: cargo build --target ${{ matrix.target }} --release

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: leech-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/leech
